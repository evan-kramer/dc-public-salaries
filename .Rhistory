by = c("lea_code", "school_code")
) %>%
# Prior
left_join(
read_csv("C:/Users/evan.kramer/Downloads/star_metric_scores_2018.csv") %>%
janitor::clean_names() %>%
transmute(
lea_code = as.numeric(lea_code),
lea_name,
school_code = as.numeric(school_code),
school_name,
framework = school_framework,
student_group,
metric,
metric_n_prior = metric_n,
metric_points_earned_prior = metric_points_earned
) %>%
filter(!is.na(metric_points_earned_prior)),
by = c("lea_code", "school_code", "framework", "student_group", "metric")
) %>%
mutate(
n_diff = metric_n - metric_n_prior,
point_diff = metric_points_earned - metric_points_earned_prior
# pct_diff = round(
#   100 * (student_group_points_earned - student_group_points_earned_prior /
#            student_group_points_earned_prior),
#   1
# )
) %>%
arrange(
lea_code, school_code, framework, point_diff, n_dif
) %>%
select(starts_with("lea_"), starts_with("school_"), everything())
# Differences in Student Group Metrics
student_group_metric_differences = left_join(
# Universe
star_school,
# Current
read_csv("C:/Users/evan.kramer/Downloads/star_metric_scores_2019.csv") %>%
janitor::clean_names() %>%
transmute(
lea_code = as.numeric(lea_code),
school_code = as.numeric(school_code),
framework = accountability_framework,
student_group,
metric,
metric_n,
metric_points_earned
) %>%
filter(!is.na(metric_points_earned)),
by = c("lea_code", "school_code")
) %>%
# Prior
left_join(
read_csv("C:/Users/evan.kramer/Downloads/star_metric_scores_2018.csv") %>%
janitor::clean_names() %>%
transmute(
lea_code = as.numeric(lea_code),
lea_name,
school_code = as.numeric(school_code),
school_name,
framework = school_framework,
student_group,
metric,
metric_n_prior = metric_n,
metric_points_earned_prior = metric_points_earned
) %>%
filter(!is.na(metric_points_earned_prior)),
by = c("lea_code", "school_code", "framework", "student_group", "metric")
) %>%
mutate(
n_diff = metric_n - metric_n_prior,
point_diff = metric_points_earned - metric_points_earned_prior
# pct_diff = round(
#   100 * (student_group_points_earned - student_group_points_earned_prior /
#            student_group_points_earned_prior),
#   1
# )
) %>%
arrange(
lea_code, school_code, framework, point_diff, n_diff
) %>%
select(starts_with("lea_"), starts_with("school_"), everything())
# Differences in Student Group Metrics
student_group_metric_differences = left_join(
# Universe
star_school,
# Current
read_csv("C:/Users/evan.kramer/Downloads/star_metric_scores_2019.csv") %>%
janitor::clean_names() %>%
transmute(
lea_code = as.numeric(lea_code),
school_code = as.numeric(school_code),
framework = accountability_framework,
student_group,
metric,
metric_n,
metric_points_earned
) %>%
filter(!is.na(metric_points_earned)),
by = c("lea_code", "school_code")
) %>%
# Prior
left_join(
read_csv("C:/Users/evan.kramer/Downloads/star_metric_scores_2018.csv") %>%
janitor::clean_names() %>%
transmute(
lea_code = as.numeric(lea_code),
lea_name,
school_code = as.numeric(school_code),
school_name,
framework = school_framework,
student_group,
metric,
metric_n_prior = metric_n,
metric_points_earned_prior = metric_points_earned
) %>%
filter(!is.na(metric_points_earned_prior)),
by = c("lea_code", "school_code", "framework", "student_group", "metric")
) %>%
mutate(
n_diff = metric_n - metric_n_prior,
point_diff = metric_points_earned - metric_points_earned_prior
# pct_diff = round(
#   100 * (student_group_points_earned - student_group_points_earned_prior /
#            student_group_points_earned_prior),
#   1
# )
) %>%
arrange(
lea_code, school_code, framework, point_diff, n_diff
) %>%
select(starts_with("lea_"), starts_with("school_"), everything()) %>%
write_csv("C:/Users/evan.kramer/Downloads/star_student_group_metric_differences.csv", na = "")
source('~/star_scores.R')
source('~/star_scores.R')
student_group_metric_differences
group_by(lea_code, school_code) %>% mutate(n = row_number()) %>% filter(n == 1)
group_by(student_group_metric_differences, lea_code, school_code) %>% mutate(n = row_number()) %>% filter(n == 1)
group_by(student_group_metric_differences, lea_code, school_code) %>% mutate(n = row_number()) %>% filter(n == 1) %>% View()
group_by(student_group_metric_differences, lea_code, school_code) %>% mutate(n = row_number()) %>% filter(n == 1) %>% group_by(metric) %>% summarize(n = n())
group_by(student_group_metric_differences, lea_code, school_code) %>% mutate(n = row_number()) %>% filter(n == 1) %>% group_by(metric) %>% summarize(n = n()) %>% arrange(desc(n))
student_group_differences
student_group_differences %>% group_by(lea_code, school_code) %>% mutate(n = row_number())
student_group_differences %>% group_by(lea_code, school_code) %>% mutate(n = row_number()) %>% filter(n == 1)
student_group_differences %>% group_by(lea_code, school_code) %>% mutate(n = row_number()) %>% filter(n == 1) %>% group_by(student_group) %>% summarize(n = n())
student_group_differences %>% group_by(lea_code, school_code) %>% mutate(n = row_number()) %>% filter(n == 1) %>% group_by(student_group) %>% summarize(n = n()) %>% arrange(desc(n))
student_group_differences %>% group_by(lea_code, school_code) %>% mutate(n = row_number()) %>% filter(n == 1) %>% group_by(student_group) %>% summarize(n = n()) %>% arrange(desc(n))
student_group_differences %>% group_by(lea_code, school_code) %>% mutate(n = row_number()) %>% filter(n == 1) %>% group_by(framework, student_group) %>% summarize(n = n()) %>% arrange(desc(n))
1/210
*100
1/210*100
1/210*100*100
library(httr)
# DC Salaries
# Evan Kramer
# 5/13/2019
# Set up
options(java.parameters = "-Xmx16G")
library(tidyverse)
library(lubridate)
library(haven)
library(httr)
library(pdftools)
?httr
library(rvest)
# Scrape from webpage?
url = read_html(https://dchr.dc.gov/public-employee-salary-information)
# Scrape from webpage?
url = read_html("https://dchr.dc.gov/public-employee-salary-information")
url
View(url)
html_nodes(url) %>%
html_text()
help(html_nodes)
html_nodes(url, "td") %>%
html_text()
html_nodes(url, "body") %>%
html_text()
html_nodes(url, "a") %>%
html_text()
html_nodes(url, "a") %>%
html_text() %>%
..[str_detect("Public Body Employee Information as of"), ]
html_nodes(url, "a") %>%
html_text() %>%
[str_detect(.., "Public Body Employee Information as of"), ]
html_nodes(url, "a") %>%
html_text() %>%
..[str_detect(.., "Public Body Employee Information as of"), ]
links = html_nodes(url, "a") %>%
html_text()
links
# DC Salaries
# Evan Kramer
# Set up
options(java.parameters = "-Xmx16G")
library(tidyverse)
library(lubridate)
library(haven)
library(httr)
library(rvest)
library(pdftools)
diff = readxl::read_excel("X:/Assessment (ASSM)/Reporting/2018-19/Analysis/10 Public File/04_version04/Output/Changes to Public File.xlsx")
View(diff)
diff = readxl::read_excel("X:/Assessment (ASSM)/Reporting/2018-19/Analysis/10 Public File/04_version04/Output/Changes to Public File.xlsx",
sheet = "State Changes") %>%
janitor::clean_names()
diff = readxl::read_excel("X:/Assessment (ASSM)/Reporting/2018-19/Analysis/10 Public File/04_version04/Output/Changes to Public File.xlsx",
sheet = "State Changes") %>%
janitor::clean_names() %>%
mutate_at(
vars(starts_with("updated"), starts_with("old_")),
funs(as.numeric(str_replace_all(., "%", "")))
)
diff = readxl::read_excel("X:/Assessment (ASSM)/Reporting/2018-19/Analysis/10 Public File/04_version04/Output/Changes to Public File.xlsx",
sheet = "State Changes") %>%
janitor::clean_names() %>%
mutate_at(
vars(starts_with("updated"), starts_with("old_")),
funs(as.numeric(str_replace_all(., "%", "")))
) %>%
mutate(diff = updated_percent_meeting_or_exceeding_expectations - old_percent_meeting_or_exceeding_expectations)
diff = readxl::read_excel("X:/Assessment (ASSM)/Reporting/2018-19/Analysis/10 Public File/04_version04/Output/Changes to Public File.xlsx",
sheet = "State Changes") %>%
janitor::clean_names() %>%
mutate_at(
vars(starts_with("updated"), starts_with("old_")),
funs(as.numeric(str_replace_all(., "%", "")))
) %>%
mutate(diff = updated_percent_meeting_or_exceeding_expectations - old_percent_meeting_or_exceeding_expectations) %>%
arrange(diff)
diff = readxl::read_excel("X:/Assessment (ASSM)/Reporting/2018-19/Analysis/10 Public File/04_version04/Output/Changes to Public File.xlsx",
sheet = "State Changes") %>%
janitor::clean_names() %>%
mutate_at(
vars(starts_with("updated"), starts_with("old_")),
funs(as.numeric(str_replace_all(., "%", "")))
) %>%
mutate(diff = updated_percent_meeting_or_exceeding_expectations - old_percent_meeting_or_exceeding_expectations) %>%
arrange(diff) %>%
select(aggregation_level:subgroup_value, diff)
diff = readxl::read_excel("X:/Assessment (ASSM)/Reporting/2018-19/Analysis/10 Public File/04_version04/Output/Changes to Public File.xlsx",
sheet = "State Changes") %>%
janitor::clean_names() %>%
mutate_at(
vars(starts_with("updated"), starts_with("old_")),
funs(as.numeric(str_replace_all(., "%", "")))
) %>%
mutate(difference = updated_percent_meeting_or_exceeding_expectations - old_percent_meeting_or_exceeding_expectations) %>%
arrange(difference) %>%
select(aggregation_level:subgroup_value, diff)
diff = readxl::read_excel("X:/Assessment (ASSM)/Reporting/2018-19/Analysis/10 Public File/04_version04/Output/Changes to Public File.xlsx",
sheet = "State Changes") %>%
janitor::clean_names() %>%
mutate_at(
vars(starts_with("updated"), starts_with("old_")),
funs(as.numeric(str_replace_all(., "%", "")))
) %>%
mutate(difference = updated_percent_meeting_or_exceeding_expectations - old_percent_meeting_or_exceeding_expectations) %>%
arrange(difference) %>%
select(aggregation_level:subgroup_value, difference)
View(diff)
diff = readxl::read_excel("X:/Assessment (ASSM)/Reporting/2018-19/Analysis/10 Public File/04_version04/Output/Changes to Public File.xlsx",
sheet = "State Changes") %>%
janitor::clean_names() %>%
mutate_at(
vars(starts_with("updated"), starts_with("old_")),
funs(as.numeric(str_replace_all(., "%", "")))
) %>%
mutate(difference = updated_percent_meeting_or_exceeding_expectations - old_percent_meeting_or_exceeding_expectations) %>%
arrange(difference) %>%
select(aggregation_level:subgroup_value, difference) %>%
write_csv("C:/Users/evan.kramer/Downloads/universe_updates_state.csv", na = "")
# Loop
for(f in c("State", "Sector", "LEA", "School")) {
readxl::read_excel("X:/Assessment (ASSM)/Reporting/2018-19/Analysis/10 Public File/04_version04/Output/Changes to Public File.xlsx",
sheet = str_c(f, " Changes")) %>%
janitor::clean_names() %>%
mutate_at(
vars(starts_with("updated"), starts_with("old_")),
funs(as.numeric(str_replace_all(., "%", "")))
) %>%
mutate(difference = updated_percent_meeting_or_exceeding_expectations - old_percent_meeting_or_exceeding_expectations) %>%
arrange(difference) %>%
filter(abs(difference) > 0.1)
select(aggregation_level:subgroup_value, difference) %>%
write_csv(str_c("C:/Users/evan.kramer/Downloads/universe_updates_", str_to_lower(f), ".csv"), na = "")
}
f
for(f in c("State", "Sector", "LEA", "School")) {
readxl::read_excel("X:/Assessment (ASSM)/Reporting/2018-19/Analysis/10 Public File/04_version04/Output/Changes to Public File.xlsx",
sheet = str_c(f, " Changes")) %>%
janitor::clean_names() %>%
mutate_at(
vars(starts_with("updated"), starts_with("old_")),
funs(as.numeric(str_replace_all(., "%", "")))
) %>%
mutate(difference = updated_percent_meeting_or_exceeding_expectations - old_percent_meeting_or_exceeding_expectations) %>%
arrange(difference) %>%
filter(abs(difference) > 0.1)
select(ward:subgroup_value, difference) %>%
write_csv(str_c("C:/Users/evan.kramer/Downloads/universe_updates_", str_to_lower(f), ".csv"), na = "")
}
readxl::read_excel("X:/Assessment (ASSM)/Reporting/2018-19/Analysis/10 Public File/04_version04/Output/Changes to Public File.xlsx",
sheet = str_c(f, " Changes")) %>%
janitor::clean_names()
readxl::read_excel("X:/Assessment (ASSM)/Reporting/2018-19/Analysis/10 Public File/04_version04/Output/Changes to Public File.xlsx",
sheet = str_c(f, " Changes")) %>%
janitor::clean_names() %>%
mutate_at(
vars(starts_with("updated"), starts_with("old_")),
funs(as.numeric(str_replace_all(., "%", "")))
)
source('~/universe_updates.R')
links = html_nodes(url, "a") %>%
html_text()
# DC Salaries
# Evan Kramer
# Set up
options(java.parameters = "-Xmx16G")
library(tidyverse)
library(lubridate)
library(haven)
library(httr)
library(rvest)
library(pdftools)
links = html_nodes(url, "a") %>%
html_text()
# Scrape from webpage?
url = read_html("https://dchr.dc.gov/public-employee-salary-information")
links = html_nodes(url, "a")
links
View(links)
links = html_nodes(url, "a") %>%
html_text()
links
rm(list = ls())
# DC Salaries
# Evan Kramer
# Set up
options(java.parameters = "-Xmx16G")
library(tidyverse)
library(lubridate)
library(haven)
library(httr)
library(rvest)
library(pdftools)
# Scrape from webpage?
url = read_html("https://dchr.dc.gov/public-employee-salary-information")
links = html_nodes(url, "a") %>%
html_text()
links
html_nodes(url, "a")
html_nodes(url, "a")
tibble(links = html_nodes(url, "a"))
links = html_nodes(url, "a")[[1]]
links
html_nodes(url, "a")
html_nodes(url, "a") %>%
as.character()
html_nodes(url, "a") %>%
as.character() %>%
View()
html_nodes(url, "a") %>%
as.character() %>%
as.tibble()
html_nodes(url, "a") %>%
as.character() %>%
as_tibble()
tibble(
link = as.character(html(nodes, url, "a"))
)
tibble(
link = as.character(html_nodes(url, "a"))
)
tibble(
link = as.character(html_nodes(url, "a"))
) %>%
View()
tibble(
link = as.character(html_nodes(url, "a"))
) %>%
filter(str_detect(str_to_lower(link, "as of")))
tibble(
link = as.character(html_nodes(url, "a"))
) %>%
filter(str_detect(str_to_lower(link), "as of"))
salary_files = tibble(
link = as.character(html_nodes(url, "a"))
) %>%
filter(str_detect(str_to_lower(link), "as of"))
View(salary_files)
salary_files[1]
salary_files$link[1]
salary_files = tibble(
link = as.character(html_nodes(url, "a"))
) %>%
filter(str_detect(str_to_lower(link), "as of")) %>%
mutate(link_start = str_locate(link, "a href"))
salary_files = tibble(
link = as.character(html_nodes(url, "a"))
) %>%
filter(str_detect(str_to_lower(link), "as of")) %>%
mutate(link_start = str_locate(link[1, ], "a href"))
class(link)
class(salary_files$link)
salary_files = tibble(
link = as.character(html_nodes(url, "a"))
) %>%
filter(str_detect(str_to_lower(link), "as of")) %>%
mutate(link_start = str_locate(link[, 1], "a href"))
salary_files$link[1]
salary_files$link_start = str_locate_all(salary_files$link, "a href")
salary_files$link_start = str_locate_all(salary_files$link, "a href")[, 2]
salary_files$link_start = str_locate_all(salary_files$link, "a href")[2]
salary_files = tibble(
link = as.character(html_nodes(url, "a"))
) %>%
filter(str_detect(str_to_lower(link), "as of"))
salary_files$link_start = str_locate_all(salary_files$link, "a href")[2]
salary_files = tibble(
link = as.character(html_nodes(url, "a"))
) %>%
filter(str_detect(str_to_lower(link), "as of"))
salary_files$link_start = str_locate_all(salary_files$link, "a href")[1]
salary_files$link_start = str_locate_all(salary_files$link, "a href")[[1]]
salary_files$link_start = str_locate_all(salary_files$link, "a href")[[1, ]]
salary_files$link_start = str_locate_all(salary_files$link, "a href")[1, ]
salary_files$link_start = str_locate_all(salary_files$link, "a href")
salary_files$link_start = link_start[1]
salary_files$link_start = salary_files$link_start[1]
19959/120
19959.05/120.40
read_csv("X:\\Assessment (ASSM)\\Reporting\\2018-19\\Analysis\\04 DC Science\\03 ISR\\03_version03\\Output\\Student_ISR_Information_1819.csv")
options(java.parameters = "-Xmx16G")
library(tidyverse)
library(lubridate)
library(haven)
read_csv("X:\\Assessment (ASSM)\\Reporting\\2018-19\\Analysis\\04 DC Science\\03 ISR\\03_version03\\Output\\Student_ISR_Information_1819.csv")
read_csv("X:\\Assessment (ASSM)\\Reporting\\2018-19\\Analysis\\04 DC Science\\03 ISR\\03_version03\\Output\\Student_ISR_Information_1819.csv") %>%
filter(is.na(percentilerank_lea))
read_csv("X:\\Assessment (ASSM)\\Reporting\\2018-19\\Analysis\\04 DC Science\\03 ISR\\02_version02\\Output\\OSSE Aggregate Level File 20191115.csv") %>%
dim()
read_csv("X:\\Assessment (ASSM)\\Reporting\\2018-19\\Analysis\\04 DC Science\\04 Aggregate File\\02_version02\\Output\\OSSE Aggregate Level File 20191115.csv") %>%
dim()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
for(l in c("", "SEA", "LEA", "School")) {
print(l)
read_csv(
str_c(
"X:\\Assessment (ASSM)\\Reporting\\2018-19\\Analysis\\04 DC Science\\04 Aggregate File\\02_version02\\Output\\OSSE ",
l,
ifelse(l == "", "Aggregate Level File 20191115.csv", " Aggregate Level File 20191115.csv")
)
) %>%
dim() %>%
print()
}
118290 + 39028 + 2225
read_csv(
str_c(
"X:\\Assessment (ASSM)\\Reporting\\2018-19\\Analysis\\04 DC Science\\04 Aggregate File\\02_version02\\Output\\OSSE ",
"",
" Aggregate Level File 20191115.csv"
)
)
read_csv(
str_c(
"X:\\Assessment (ASSM)\\Reporting\\2018-19\\Analysis\\04 DC Science\\04 Aggregate File\\02_version02\\Output\\OSSE ",
"",
"Aggregate Level File 20191115.csv"
)
)
read_csv(
str_c(
"X:\\Assessment (ASSM)\\Reporting\\2018-19\\Analysis\\04 DC Science\\04 Aggregate File\\02_version02\\Output\\OSSE ",
"",
"Aggregate Level File 20191115.csv"
)
) %>%
arrange(enrolled_lea_code, enrolled_school_code)
read_csv(
str_c(
"X:\\Assessment (ASSM)\\Reporting\\2018-19\\Analysis\\04 DC Science\\04 Aggregate File\\02_version02\\Output\\OSSE ",
"",
"Aggregate Level File 20191115.csv"
)
) %>%
arrange(enrolled_lea_code, enrolled_school_code, metric_value)
read_csv(
str_c(
"X:\\Assessment (ASSM)\\Reporting\\2018-19\\Analysis\\04 DC Science\\04 Aggregate File\\02_version02\\Output\\OSSE ",
"",
"Aggregate Level File 20191115.csv"
)
) %>%
arrange(enrolled_lea_code, enrolled_school_code, metric_value) %>%
View()
3474+1236
# DC Salaries
# Evan Kramer
# Set up
options(java.parameters = "-Xmx16G")
library(tidyverse)
library(lubridate)
library(haven)
library(httr)
library(rvest)
library(pdftools)
setwd("C:/Users/evan.kramer/Documents/dc_public_salaries")
